<?php

/**
 * Session class
 *
 * handles the session stuff. creates session when no one exists, sets and
 * gets values, and closes the session properly (=logout). Those methods
 * are STATIC, which means you can call them with Session::get(XXX);
 */
class Session
{
    /**
     * starts the session
     */
    public static function init()
    {
        //session.name强制定制成PHPSESSID,不请允许更改
        @ini_set('session.name','PHPSESSID');
        @ini_set('session.cookie_domain', Flight::get("COOKIE_DOMAIN"));

        //开启以下配置支持session信息存信memcache
        @ini_set("session.save_handler", Flight::get("COOKIE_DOMAIN"));
        @ini_set("session.save_path", Flight::get('MEMCACHE_HOST').':'.Flight::get('MEMCACHE_PORT'));

        // if no session exist, start the session
        if (session_id() == '') {
            session_start();
        }
    }

    /**
     * sets a specific value to a specific key of the session
     * @param mixed $key
     * @param mixed $value
     */
    public static function set($key, $value, $module = '')
    {
        if($module) {
            $_SESSION[$module][$key] = $value;
        }else{
            $_SESSION[$key] = $value;
        }
    }

    /**
     * gets/returns the value of a specific key of the session
     * @param mixed $key Usually a string, right ?
     * @return mixed
     */
    public static function get($key)
    {
        if (isset($_SESSION[$key])) {
            return $_SESSION[$key];
        }
    }

    /**
     * deletes the session (= logs the user out)
     */
    public static function destroy()
    {
        session_destroy();
    }
}
