<?php

class Dashboard{

	/**
	 * 管理界面
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-01
	 */
	public static function admin() {

		Flight::jsrender("/public/js/dashboard/admin.js");
		Flight::render("dashboard/admin");

	}

	/**
	 * 获取管理员账户
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-02
	 */
	public static function getAdminUsers() {
		$req = Flight::request()->query;

		$search = isset($req->sSearch)?$req->sSearch:'';
		$length = isset($req->iDisplayLength)?$req->iDisplayLength:'';
		$start = isset($req->iDisplayStart)?$req->iDisplayStart:'';

		$db = Flight::get('db');
		$condtion = array(
			'ORDER' => 'admin_name', 
			'LIMIT' => "{$start},{$length}");

		if($search) {
			$condtion['admin_name[~]'] = "{$search}";
		}

		$res = $db->select('lk_admin', "*", $condtion);

		$result = array();
		if($res){
			foreach ($res as $key => $value) {
				$group_name = $db->get('lk_group', 'group_name', array('group_id' => $value['group_id']));

				$result[] = array(
					'admin_name' => $value['admin_name'],
					'is_use' => $value['is_use'],
					'group_name' => $group_name?$group_name:'',
					'phone_mob' => $value['phone_mob'],
					'admin_id' => $value['admin_id'],
				);
			}
		}

		$iFilteredTotal = $db->count('lk_admin', $condtion);
		$iTotalRecords = $db->count('lk_admin');

		Flight::json(array(
			'aaData' => $result, 
			"sEcho" => intval($req->sEcho),
			"iTotalRecords" => $iTotalRecords,
			"iTotalDisplayRecords" => $iFilteredTotal,
		));

	}

	/**
	 * 管理员管理
	 *
	 * @author zhaozl
	 * @since  2015-07-02
	 */
	public static function addadmin() {

		if(IS_POST) {
			$data = Flight::request()->data;

			$admin_name = isset($data['admin_name'])?trim($data['admin_name']):'';
			$admin_password = isset($data['admin_password'])?trim($data['admin_password']):'';
			$true_name = isset($data['true_name'])?trim($data['true_name']):'';
			$phone_mob = isset($data['phone_mob'])?trim($data['phone_mob']):'';
			$group_id = isset($data['group_id'])?trim($data['group_id']):'';
			$is_use = isset($data['is_use'])?trim($data['is_use']):'';

			if(!$admin_name) {
				Handle::result("错误", "为获取到用户名, 请重新输入" );
			}
			//判断输入name的是否存在
			$db = Flight::get('db');
			$isAdmin = $db->get('lk_admin', 'admin_id', array('admin_name' => $admin_name));

			if($isAdmin) {
				Handle::result("错误", "用户名已经存在, 请重新输入" );
			}else{
				$last_user_id = $db->insert("lk_admin", array(
					"admin_name" => $admin_name,
					"true_name" => $true_name,
					"admin_password" => md5($admin_password),
					"group_id" => $group_id,
					"phone_mob" => $phone_mob,
					"is_use" => $is_use,
					"add_time" => time(),
				));

				if($last_user_id) {
					Handle::result("成功", "添加成功", '../dashboard/admin', "点击继续添加", '../dashboard/addadmin' );
				}else{
					Handle::result("失败", "添加数据失败");
				}
			}

		}else{
			Flight::jsrender("/public/js/plugins/jquery.validate.min.js");
			Flight::jsrender("/public/js/dashboard/manageadmin.js");

			$db = Flight::get('db');
			$groups = $db->select("lk_group", array('group_id','group_name'), array('is_use' => 1));

			$gArray = array();
			foreach ($groups as $key => $value) {
				$gArray[$value['group_id']] = $value['group_name'];
			}

			Flight::render("dashboard/manageadmin", array('type' => 'add', 'groups' => $gArray));
		}

	}

	/**
	 * 编辑管理员
	 *
	 * @author zhaozl
	 * @since  2015-07-02
	 */
	public static function editadmin() {

		if(IS_POST) {
			$data = Flight::request()->data;

			$admin_id = isset($data['admin_id'])?trim($data['admin_id']):'';
			$admin_name = isset($data['admin_name'])?trim($data['admin_name']):'';
			$admin_password = isset($data['admin_password'])?trim($data['admin_password']):'';
			$true_name = isset($data['true_name'])?trim($data['true_name']):'';
			$phone_mob = isset($data['phone_mob'])?trim($data['phone_mob']):'';
			$group_id = isset($data['group_id'])?trim($data['group_id']):'';
			$is_use = isset($data['is_use'])?trim($data['is_use']):'';

			if(!$admin_name) {
				Handle::result("错误", "为获取到用户名, 请重新输入" );
			}
			//判断输入name的是否存在
			$db = Flight::get('db');
			$isAdmin = $db->get('lk_admin', 'admin_id', array('admin_name' => $admin_name, 'admin_id[!]' => $admin_id));

			if($isAdmin) {
				Handle::result("错误", "用户名已经存在, 请重新输入" );
			}else{
				$db->update("lk_admin", array(
					"admin_name" => $admin_name,
					"true_name" => $true_name,
					"admin_password" => md5($admin_password),
					"group_id" => $group_id,
					"phone_mob" => $phone_mob,
					"is_use" => $is_use
				), array('admin_id' => $admin_id));

				Handle::result("成功", "编辑成功", '../dashboard/admin', "点击再次编辑", '../dashboard/editadmin?admin_id='.$admin_id );
			}
		}else{
			Flight::jsrender("/public/js/plugins/jquery.validate.min.js");
			Flight::jsrender("/public/js/dashboard/manageadmin.js");

			$db = Flight::get('db');
			$groups = $db->select("lk_group", array('group_id','group_name'), array('is_use' => 1));

			$gArray = array();
			foreach ($groups as $key => $value) {
				$gArray[$value['group_id']] = $value['group_name'];
			}

			$admin_user = $db->get('lk_admin', '*', array('admin_id' => Flight::request()->query->admin_id));

			Flight::render("dashboard/manageadmin", array(
				'type' => 'edit', 
				'groups' => $gArray, 
				'admin_id' => $admin_user['admin_id'],
				'admin_name' => $admin_user['admin_name'],
				'true_name' => $admin_user['true_name'],
				'admin_password' => $admin_user['admin_password'],
				'group_id' => $admin_user['group_id'],
				'phone_mob' => $admin_user['phone_mob'],
				'is_use' => $admin_user['is_use'],
			));
		}


	}

	/**
	 * 删除管理员
	 *
	 * @author zhaozl
	 * @since  2015-07-02
	 */
	public static function deladmin() {

		if(IS_POST) {
			$admin_id = Flight::request()->data->admin_id;
			$db = Flight::get('db');
			$delRes = $db->delete("lk_admin",  array('admin_id' => $admin_id));

			if($delRes) {
				Flight::json(array('success' => true, 'msg' => '删除成功'));
			}else{
				Flight::json(array('success' => false, 'msg' => '删除失败'));
			}

		}else{
			Handle::result('302', '非法请求', '../dashboard/admin');
		}

	}

	/**
	 * 用户组
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-06
	 */
	public static function group() {

		Flight::jsrender("/public/js/dashboard/group.js");
		Flight::render("dashboard/group");

	}

	/**
	 * 获取当前用户组
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-06
	 */
	public static function getGroups() {
		$req = Flight::request()->query;

		$search = isset($req->sSearch)?$req->sSearch:'';
		$length = isset($req->iDisplayLength)?$req->iDisplayLength:'';
		$start = isset($req->iDisplayStart)?$req->iDisplayStart:'';

		$db = Flight::get('db');
		$condtion = array(
			'ORDER' => 'group_name', 
			'LIMIT' => "{$start},{$length}");

		if($search) {
			$condtion['group_name[~]'] = "{$search}";
		}

		$res = $db->select('lk_group', "*", $condtion);

		$result = array();
		if($res){
			foreach ($res as $key => $value) {

				$result[] = array(
					'group_name' => $value['group_name'],
					'is_use' => $value['is_use'],
					'group_id' => $value['group_id'],
				);
			}
		}

		$iFilteredTotal = $db->count('lk_group', $condtion);
		$iTotalRecords = $db->count('lk_group');

		Flight::json(array(
			'aaData' => $result, 
			"sEcho" => intval($req->sEcho),
			"iTotalRecords" => $iTotalRecords,
			"iTotalDisplayRecords" => $iFilteredTotal,
		));

	}

	/**
	 * 管理用户组
	 *
	 * @author zhaozl
	 * @since  2015-07-02
	 */
	public static function addgroup() {

		if(IS_POST) {

			$data = Flight::request()->data;

			$group_name = isset($data['group_name'])?trim($data['group_name']):'';
			$is_use = isset($data['is_use'])?$data['is_use']:'';
			$check = isset($data['check'])?$data['check']:'';

			if(!$group_name) {
				Handle::result("错误", "为获取到组名, 请重新输入" );
			}
			//判断输入name的是否存在
			$db = Flight::get('db');
			$isgroup = $db->get('lk_group', 'group_id', array('group_name' => $group_name));

			if($isgroup) {
				Handle::result("错误", "该组已经存在, 请重新输入" );
			}else{

				$permissions = array();
				$index = 1;
				foreach ($check as $module => $act) {
					if($index == 1) {
						$permissions['defaultapp'] = $module;
						$tmp = array_keys($act);
						$permissions['defaultact'] = $tmp[0];
					}
					$permissions[$module] = array_keys($act);
					$index++;
				}

				$last_user_id = $db->insert("lk_group", array(
					"group_name" => $group_name,
					"permissions" => serialize($permissions),
					"add_time" => time(),
				));

				if($last_user_id) {
					Handle::result("成功", "添加成功", '../dashboard/group', "点击继续添加", '../dashboard/addgroup' );
				}else{
					Handle::result("失败", "添加数据失败");
				}
			}

		}else{
			Flight::jsrender("/public/js/plugins/jquery.validate.min.js");
			Flight::jsrender("/public/js/dashboard/managegroup.js");

			$pers = include(CONF_PATH . '/menu.php');

			Flight::render("dashboard/managegroup", array('type' => 'add', 'pers' => $pers));
			
		}

	}

	/**
	 * 编辑用户组
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-06
	 */
	public static function editgroup() {

		if(IS_POST) {

			$data = Flight::request()->data;

			$group_name = isset($data['group_name'])?trim($data['group_name']):'';
			$is_use = isset($data['is_use'])?$data['is_use']:'';
			$check = isset($data['check'])?$data['check']:'';
			$group_id = isset($data['group_id'])?$data['group_id']:'';

			if(!$group_name) {
				Handle::result("错误", "为获取到组名, 请重新输入" );
			}
			//判断输入name的是否存在
			$db = Flight::get('db');
			$isgroup = $db->get('lk_group', 'group_id', array('group_name' => $group_name,  'group_id[!]' => $group_id));

			if($isgroup) {
				Handle::result("错误", "该组已经存在, 请重新输入" );
			}else{

				$permissions = array();
				$index = 1;
				foreach ($check as $module => $act) {
					if($index == 1) {
						$permissions['defaultapp'] = $module;
						$tmp     = array_keys($act);
						$permissions['defaultact'] = $tmp[0];
					}
					$permissions[$module] = array_keys($act);
					$index++;
				}

				$db->update("lk_group", array(
					"group_name" => $group_name,
					"permissions" => serialize($permissions),
					"is_use" => $is_use,
				), array('group_id' => $group_id));

				Handle::result("成功", "编辑成功", '../dashboard/group', "点击再次编辑", '../dashboard/editgroup?group_id='.$group_id );
			}
		}else{
			Flight::jsrender("/public/js/plugins/jquery.validate.min.js");
			Flight::jsrender("/public/js/dashboard/managegroup.js");

			$db = Flight::get('db');
			$group = $db->get('lk_group', '*', array('group_id' => Flight::request()->query->group_id));

			$pers = include(CONF_PATH . '/menu.php');

			Flight::render("dashboard/managegroup", array(
				'type' => 'edit', 
				'group_id' => $group['group_id'],
				'group_name' => $group['group_name'],
				'permissions' => unserialize($group['permissions']),
				'is_use' => $group['is_use'],
				'pers' => $pers
			));
		}

	}

	/**
	 * 删除用户组
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-06
	 */
	public static function delgroup() {
		if(IS_POST) {
			$group_id = Flight::request()->data->group_id;
			$db = Flight::get('db');

			// 先判断词组下面有没有人
			$admins = $db->select('lk_admin', 'admin_id', array('group_id' => $group_id));
			if($admins) {
				$delRes = $db->update("lk_group",  array('is_del' => 1), array('group_id' => $group_id));
			}else{
				$delRes = $db->delete("lk_group",  array('group_id' => $group_id));
			}

			if($delRes) {
				Flight::json(array('success' => true, 'msg' => '删除成功'));
			}else{
				Flight::json(array('success' => false, 'msg' => '删除失败'));
			}

		}else{
			Handle::result('302', '非法请求', '../dashboard/admin');
		}
	}

	/**
	 * 变更密码界面
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-06
	 */
	public static function changepwd() {

		if(IS_POST) {

			$data = Flight::request()->data;
			$admin_id = Session::get('admin_id');

			$admin_password = isset($data['admin_password'])?$data['admin_password']:'';
			$admin_password_conf = isset($data['admin_password_conf'])?$data['admin_password_conf']:'';

			if($admin_password == $admin_password_conf) {
				$admin_pwd = md5($admin_password);

				$db = Flight::get('db');
				$db->update('lk_admin', array('admin_password' => $admin_pwd), array('admin_id' => $admin_id));

				Handle::result("成功", "密码修改成功", '../dashboard/admin');
				
			}else{
				Handle::result("错误", "密码两次输入不一样");
			}


		}else{

			Flight::jsrender("/public/js/plugins/jquery.validate.min.js");
			Flight::jsrender("/public/js/dashboard/changepwd.js");


			Flight::render("dashboard/changepwd");
			
		}

	}


}