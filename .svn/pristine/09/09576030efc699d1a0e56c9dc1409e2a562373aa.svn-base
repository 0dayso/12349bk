<?php

/**
 * 订单模块管理
 */
class Order {

	private static $order_status = array(
		'0' => '待审核',
		'1' => '已审核',
		'2' => '打回',
		'3' => '无效',
		'4' => '已被抢单',
		'5' => '待支付',
		'6' => '已完成',
	);


	/**
	 * 待审核订单
	 *
	 * @return page
	 * @author zhaozl
	 * @since  2015-07-01
	 */
	public static function waitorder() {

		Flight::jsrender('/public/js/order/waitorder.js');

		Flight::render('order/waitorder');

	}

	/**
	 * 获取服务类型
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-07
	 */
	public static function getItemsType() {

		$db = Flight::get('db');
		$items = $db->select('lk_service_item', array('item_id', 'item_name', 'ser_id'), array('is_use' => 1));
		// 此处获取类型
		$services = $db->select('lk_service', array('ser_id', 'ser_name'), array('is_use' => 1));
		$sers = array();
		foreach ($services as $ser) {
			$sers[$ser['ser_id']] = $ser['ser_name'];
		}

		$types = array();
		foreach ($items as $item) {
			$types[$item['item_id']] = $sers[$item['ser_id']]. '·' . $item['item_name'];
		}

		Flight::json($types);
	}


	/**
	 * 获取订单
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-06
	 */
	public static function getOrders() {

		$req = Flight::request()->query;

		$search = isset($req->sSearch)?$req->sSearch:'';
		$sSearch_1 = isset($req->sSearch_1)?$req->sSearch_1:'';

		$type = isset($req->type)?$req->type:'';
		$length = isset($req->iDisplayLength)?$req->iDisplayLength:'';
		$start = isset($req->iDisplayStart)?$req->iDisplayStart:'';
		$sort_index = isset($req->iSortCol_0)?$req->iSortCol_0:'0';

		$sort_item = $req['mDataProp_'.$sort_index];
		$sort_sort = strtoupper($req['sSortDir_0']);

		$db = Flight::get('db');
		$condtion = array(
			'ORDER' => array("{$sort_item} {$sort_sort}"), 
			'LIMIT' => "{$start},{$length}"
		);


		switch ($type) {
			case '1':
			// 待审核订单
				$condtion['AND']['status'] = "0";
				if($sSearch_1 > 0) {
					$condtion['AND']['item_id'] = $sSearch_1;
				}
				break;
			case '2':
			// 带接单订单
				$condtion['AND']['status'] = "1";
				if($sSearch_1 > 0) {
					$condtion['AND']['item_id'] = $sSearch_1;
				}
				break;
			case '3':
			// 投诉订单
				$condtion['AND']['degree'] = "-1";
				break;
			default:
			// 全部订单
				break;
		}
		if($search) {
			$condtion['AND']['OR']['order_sn[~]'] = "{$search}";
			$condtion['AND']['OR']['contact[~]'] = "{$search}";
		}

		$res = $db->select('lk_order', array(
			"[>]lk_order_service" => "order_sn",
			"[>]lk_order_address" => "order_sn",
			"[>]lk_staff_comment" => "order_sn",
			), "*", $condtion);
		$result = array();
		if($res){
			foreach ($res as $key => $value) {

				$result[] = array(
					'order_sn' => $value['order_sn'],
					'type_name' => $value['service_name']. '·'. $value['item_name'],
					'status' => self::$order_status[$value['status']],
					'shop_name' => $value['shop_name'],
					'staff_name' => $value['staff_name'],
					'contact' => $value['contact'],
					'degree' => $value['degree'],
					'amount' => $value['amount'],
					'phone_mob' => isset($value['phone_mob'])?$value['phone_mob']:$value['phone_tel'],
					'address_detail' => $value['region_name'].$value['address'],
					'need_time' => $value['need_time'] > 0?date('Y-m-d H:i:s', $value['need_time']):'尽快',
					'remark' => $value['remark'],
					'order_id' => $value['order_id'],
				);
			}
		}

		$iFilteredTotal = $db->count('lk_order', array(
			"[>]lk_order_service" => "order_sn",
			"[>]lk_order_address" => "order_sn",
			), "order_id",$condtion);
		$iTotalRecords = $db->count('lk_order');

		Flight::json(array(
			'aaData' => $result, 
			"sEcho" => intval($req->sEcho),
			"iTotalRecords" => $iTotalRecords,
			"iTotalDisplayRecords" => $iFilteredTotal,
		));

	}

	/**
	 * 审核订单
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-07
	 */
	public static function check_order() {

		$req = Flight::request()->data;
		$order_id = isset($req['order_id'])?$req['order_id']:'';
		$type = isset($req['type'])?$req['type']:'';

		if($order_id) {

			// 判断订单是否存在并有效
			$db = Flight::get('db');
			$hasOrder = $db->has('lk_order',array('AND' => array('order_id' => $order_id, 'status' => 0)) );
			if($hasOrder) {

				$admin_id = Session::get('admin_id');
				$time = time();

				if($type == 1) {

					// 更改订单表审核信息
					$db->update('lk_order', array(
						'status' => 1,
						'verify_time' => $time,
					), array('order_id' => $order_id));

					// 添加操作记录
					$order_sn = $db->get('lk_order', 'order_sn', array('order_id' => $order_id));
					$db->insert('lk_order_action', array(
						'order_sn' => $order_sn,
						'admin_id' => $admin_id,
						'action_id' => 1,
						'action_result' => 1,
						'comment' => '审核通过',
						'action_time' => $time
					));

					Flight::json(array('success' => true, 'msg' => '审核订单成功'));
				}else{

					$reason = isset($req['reason'])?$req['reason']:'';
					// 更改订单表审核信息
					$db->update('lk_order', array(
						'status' => 2,
						'verify_time' => $time,
					), array('order_id' => $order_id));

					// 添加操作记录
					$order_sn = $db->get('lk_order', 'order_sn', array('order_id' => $order_id));
					$db->insert('lk_order_action', array(
						'order_sn' => $order_sn,
						'admin_id' => $admin_id,
						'action_id' => 1,
						'action_result' => 0,
						'comment' => $reason,
						'action_time' => $time
					));

					Flight::json(array('success' => true, 'msg' => '打回订单成功'));
				}

			}else{
				Flight::json(array('success' => false, 'msg' => '找不到符合条件的订单'));
			}

		}else{
			Flight::json(array('success' => false, 'msg' => '传入的数据不正确'));
		}

	}

	/**
	 * 审核成功待接单订单
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-07
	 */
	public static function processorder() {

		Flight::jsrender('/public/js/order/processorder.js');

		Flight::render('order/processorder');

	}

	/**
	 * 投诉订单
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-07
	 */
	public static function complainorder() {
		Flight::jsrender('/public/js/order/complainorder.js');

		Flight::render('order/complainorder');
	}

	/**
	 * 全部订单
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-07
	 */
	public static function allorder() {
		Flight::jsrender('/public/js/order/allorder.js');

		Flight::render('order/allorder');
	}


	/**
	 * 审核成功待接单订单
	 *
	 * @return [type]     [description]
	 * @author zhaozl
	 * @since  2015-07-07
	 */
	public static function view_order() {

		$req = Flight::request()->query;
		$order_id = isset($req['order_id'])?$req['order_id']:'';

		$db = Flight::get('db');
		$order_info = $db->get('lk_order', "*", array('order_id' => $order_id));
		if($order_info) {
			$order_sn = $order_info['order_sn'];
			$status = $order_info['status'];
			$buyer_id = $order_info['buyer_id'];
			$buyer_name = $order_info['buyer_name'];
			$staff_id = $order_info['staff_id'];
			$staff_name = $order_info['staff_name'];
			$shop_id = $order_info['shop_id'];
			$shop_name = $order_info['shop_name'];
			$add_time = date('Y-m-d H:i:s', $order_info['add_time']);
			$need_time = $order_info['need_time'] > 0?date('Y-m-d H:i:s', $order_info['need_time']):'尽快';
			$verify_time = $order_info['verify_time'] > 0?date('Y-m-d H:i:s', $order_info['verify_time']):'';
			$work_time = $order_info['work_time'] > 0?date('Y-m-d H:i:s', $order_info['work_time']):'';
			$finish_time = $order_info['finish_time'] > 0?date('Y-m-d H:i:s', $order_info['finish_time']):'';
			$use_coupon_value = $order_info['use_coupon_value'];
			$order_amount = $order_info['order_amount'];
			$amount = $order_info['amount'];
			$remark = $order_info['remark'];

			//获取类型
			$item = $db->get('lk_order_service', array('service_name', 'item_name'), array('order_sn' => $order_sn) );
			// 订单地址
			$address = $db->get('lk_order_address', array('contact', 'region_name', 'address', 'phone_mob'), array('order_sn' => $order_sn) );
			// 订单商家
			if($shop_id > 0) {
				$shop_phone = $db->get('lk_shop', "phone", array('shop_id' => $shop_id));
			}

			if($staff_id > 0) {
				$staff_phone = $db->get('lk_shopstaff', "phone_mob", array('staff_id' => $staff_id));
			}

			$evaluation_status = $order_info['evaluation_status'];
			if($evaluation_status) {
				$evals = $db->get('lk_staff_comment', array("degree", "comment"), array('order_sn' => $order_sn));
			}

			Flight::render('order/vieworder', array(
				'order_sn' => $order_sn,
				'status' => self::$order_status[$status],
				'type_name' => $item['service_name'].'·'.$item['item_name'],
				'add_time' => $add_time,
				'need_time' => $need_time,
				'finish_time' => $finish_time,
				'verify_time' => $verify_time,
				'work_time' => $work_time,
				'amount' => $amount,
				'use_coupon_value' => $use_coupon_value,
				'order_amount' => $order_amount,
				'buyer_name' => $buyer_name,
				'remark' => $remark,
				'contact' => $address['contact'],
				'phone_mob' => $address['phone_mob'],
				'address' => $address['region_name'].$address['address'],
				'shop_name' => isset($shop_name)?$shop_name:'',
				'shop_phone' => isset($shop_phone)?$shop_phone:'',
				'staff_name' => isset($staff_name)?$staff_name:'',
				'staff_phone' => isset($staff_phone)?$staff_phone:'',
				'degree' => isset($evals['degree'])?$evals['degree']:'NO_COMMENT',
				'comment' => isset($evals['comment'])?$evals['comment']:'',
			));
			
		}else{
			Handle::result("404", "找不到相关订单信息");
		}

	}


}