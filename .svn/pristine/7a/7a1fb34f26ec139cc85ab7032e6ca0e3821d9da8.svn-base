<?php

ini_set('date.timezone','Asia/Shanghai');
require_once "./bInit.php";
require_once "./lib/WxPay.Api.php";
require_once './lib/WxPay.Notify.php';
require_once './log.php';
require_once  "../vender/medoo.min.php";



class PayNotifyCallBack extends WxPayNotify
{
	//查询订单
	public function Queryorder($transaction_id)
	{
		$input = new WxPayOrderQuery(); 
		$input->SetTransaction_id($transaction_id);
		$result = WxPayApi::orderQuery($input);
		$database = new medoo(array(
		    // 必填
		    'database_type' => 'mysql',
		    'database_name' => 'loukou12349',
		    'server'        => '192.168.0.153',
		    'username'      => 'loukou12349',
		    'password'      => 'loukou12349',
		    'port'          => 3306, 
		    'charset'       => 'utf8',
		    'option'        => array()
		));

		if(array_key_exists("return_code", $result)
			&& array_key_exists("result_code", $result)
			&& $result["return_code"] == "SUCCESS"
			&& $result["result_code"] == "SUCCESS")
		{
			
			$time = time();
			$database->pdo->beginTransaction();
			$res = $database->update("lk_order",array(
				"pay_time" => $time,
				"pay_type" => 0,
				"status"   => 6
			),array(
				"order_sn[=]" => $result['out_trade_no']
			));
			$res2 = $database->insert("lk_order_pay",array(
				"pay_name" => "微信支付",
				"pay_time" => $time,
				"status"   => 1,
				"pay_id"   => 2,
				"pay_message" => '支付成功',
				"order_sn" => $result['out_trade_no']
			));
			$res3 = $database->insert("lk_order_action",array(
				"action_id"        => 6,
				"action_result"    => 1,
				"comment"          => serialize($result),
				"action_time"      => "$time",
				"order_sn"         => $result['out_trade_no']
			)); 


			if( $res && $res2 && $res3 ){
				$database->pdo->commit();
			}else{
				$database->pdo->rollBack();
			}
 
			return true;
		}
		return false;
	}
	 
	//重写回调处理函数
	public function NotifyProcess($data, &$msg)
	{
		$notfiyOutput = array();
		
		if(!array_key_exists("transaction_id", $data)){
			$msg = "输入参数不正确";
			return false;
		}
		//查询订单，判断订单真实性
		if(!$this->Queryorder($data["transaction_id"])){
			$msg = "订单查询失败";
			return false;
		}
		return true;
	}
}

$notify = new PayNotifyCallBack();
$notify->Handle(false);
